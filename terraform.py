# -*- coding: utf-8 -*-

"""
/***************************************************************************
 TerraformTopoCorrection
                                 A QGIS plugin
 Topographically correct provided input layer.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2023-02-27
        copyright            : (C) 2023 by Tigran Manasyan
        email                : t.manasyan@g.nsu.ru
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Tigran Manasyan'
__date__ = '2023-02-27'
__copyright__ = '(C) 2023 by Tigran Manasyan'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

import os
import sys
import inspect

from qgis.core import (
    QgsApplication,
    QgsProject
)
from qgis.gui import (
    QgsOptionsWidgetFactory,
    QgsOptionsPageWidget
)

from qgis.PyQt.QtCore import QDir
from qgis.PyQt.QtWidgets import QMessageBox, QAction, QHBoxLayout
from qgis.PyQt.QtGui import QIcon

from .terraform_processing_provider import TerraformProcessingProvider

cmd_folder = os.path.split(inspect.getfile(inspect.currentframe()))[0]

if cmd_folder not in sys.path:
    sys.path.insert(0, cmd_folder)


class TerraformTopoCorrectionPlugin(object):

    def __init__(self, iface):
        self.provider = None
        # save reference to the QGIS interface
        self.iface = iface

    def initProcessing(self):
        """Init Processing provider for QGIS >= 3.8."""
        self.provider = TerraformProcessingProvider()
        QgsApplication.processingRegistry().addProvider(self.provider)

    def initGui(self):
        self.initProcessing()

        self.key_action = QAction("Test Plugin", self.iface.mainWindow())
        self.iface.registerMainWindowAction(self.key_action, "Ctrl+I")  # action triggered by Ctrl+I
        self.iface.addPluginToMenu("&Test plugins", self.key_action)
        self.key_action.triggered.connect(self.key_action_triggered)

    def key_action_triggered(self):
        QMessageBox.information(self.iface.mainWindow(), "Ok", "You pressed Ctrl+I")

    def unload(self):
        QgsApplication.processingRegistry().removeProvider(self.provider)

        self.iface.unregisterMainWindowAction(self.key_action)
